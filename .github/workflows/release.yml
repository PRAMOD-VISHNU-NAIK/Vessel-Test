name: Publish Package

on:
  push:
    branches:
      - "main"
    paths:
      - "**"

permissions:
  id-token: write
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Increment version in version.py
        id: version
        run: |
          current_version=$(grep "__version__" version.py | cut -d '"' -f2)
          echo "Current version is $current_version"
          IFS='.' read -r -a version_parts <<< "$current_version"
          major=${version_parts[0]}
          minor=${version_parts[1]}
          patch=${version_parts[2]}
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          echo "New version is $new_version"
          sed -i "s/__version__ = \"$current_version\"/__version__ = \"$new_version\"/" version.py
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Commit and push updated version.py
        run: |
          git config --global user.email "pammunaik99.51solution@gmail.com"
          git config --global user.name "Pramod Naik"
          git add version.py
          git commit -m "Bump version to ${{ env.new_version }}"
          git push

      - name: Build the package
        run: |
          python setup.py sdist bdist_wheel

      - name: PWD
        run: pwd

      - name: List the Files
        run: ls

      - name: List Dist folder
        run: ls dist/

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "V${{ env.new_version }}"
          release_name: "V${{ env.new_version }}"
          draft: false
          prerelease: false

      - name: Upload release asset to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Pramod_Calculator-${{env.new_version}}-py3-none-any.whl
          asset_name: package-${{ env.new_version }}.whl
          asset_content_type: application/octet-stream
